# Start with the .NET SDK for building the app
FROM mcr.microsoft.com/dotnet/sdk:8.0 AS build



# Work within a folder named `/source`
WORKDIR /source

# Copy everything in this project and build app
COPY . ./dotnetcore-docs-hello-world/
WORKDIR /source/dotnetcore-docs-hello-world
RUN dotnet publish -c release -o /app 

# final stage/image
FROM mcr.microsoft.com/dotnet/aspnet:8.0

# ===============  Preparing container for the App Service =============== 
RUN apt-get update -qq \
    && apt-get install -y nodejs openssh-server vim curl wget tcptraceroute --no-install-recommends \
    && echo "root:Docker!" | chpasswd \
    && echo "cd /home" >> /etc/bash.bashrc

COPY init_container.sh /bin/
COPY startup.sh /opt/
COPY sshd_config /etc/ssh/

RUN chmod 755 /bin/init_container.sh \
  && mkdir -p /home/LogFiles/ \
  && chmod 755 /opt/startup.sh

# =============== Install application source code =============== 
WORKDIR /app
COPY --from=build /app ./

# =============== Add WebJob to the Container ===============
WORKDIR /app_data/jobs/Triggered/TriggeredDemo
COPY webJobSample.sh .

# Expose port 80
# This is important in order for the Azure App Service to pick up the app
ENV PORT=80
ENV SSH_PORT=2222
EXPOSE 80 2222

# Set the ASP.NET Core URL to listen on port 80
ENV ASPNETCORE_URLS=http://+:80

# Start the app
#ENTRYPOINT ["dotnet", "dotnetcoresample.dll"]
ENTRYPOINT [ "/bin/init_container.sh" ]
