@page "/embed/bootstrap"
@inject Microsoft.Extensions.Configuration.IConfiguration Config

@{
    Layout = null;
    var csv = Config["EMBED_ALLOWED_ORIGINS"] ?? "";
    var allowed = csv.Split(',', StringSplitOptions.RemoveEmptyEntries | StringSplitOptions.TrimEntries);
    var allowedJson = System.Text.Json.JsonSerializer.Serialize(allowed);
}

<!-- /embed/bootstrap -->
<!doctype html>
<html>
<head><meta charset="utf-8"><title>Loadingâ€¦</title></head>
<body>
<script>
  // 1) Announce readiness to parent (limit to your parent origin if known)
  if (window.parent !== window) {
    window.parent.postMessage('embed:ready', '*'); // can use * to get initial response; validate on receive below
  }

  // 2) Receive token from allowed parent, start session, then redirect
  window.addEventListener('message', async (ev) => {
    const allowedParents = @Html.Raw(allowedJson); // use allowedParents.includes(ev.origin)
    if (!allowedParents.includes(ev.origin)) return;
    if (!ev.data || ev.data.type !== 'embed:token') return;

    try {
      const res = await fetch('/api/session/start', {
        method: 'POST',
        credentials: 'include',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ token: ev.data.token })
      });
      if (!res.ok) throw new Error('session start failed');
    
      // Redirect to protected app without token in URL
      window.location.replace('/');
    } catch (e) {
      document.body.textContent = 'Unable to start session.';
      console.error(e);
    }
  }, { once: true });
</script>
</body>
</html>
